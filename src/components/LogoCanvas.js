import gsap from 'gsap';
import React, { Component } from 'react';
import { getAsset } from 'utils/AssetLoader';

import SpritesheetUtils from 'utils/SpritesheetUtils';

const data = {
    "images": [],
    "frames": [
        [1, 1, 209, 150, 0, -56, -17],
        [212, 1, 209, 150, 0, -57, -16],
        [423, 1, 210, 150, 0, -59, -15],
        [635, 1, 207, 150, 0, -62, -15],
        [844, 1, 205, 151, 0, -65, -13],
        [1051, 1, 203, 151, 0, -67, -12],
        [1256, 1, 198, 151, 0, -71, -11],
        [1456, 1, 195, 151, 0, -74, -10],
        [1653, 1, 190, 152, 0, -78, -9],
        [1, 155, 186, 153, 0, -81, -7],
        [189, 155, 180, 153, 0, -85, -6],
        [371, 155, 174, 153, 0, -89, -6],
        [547, 155, 167, 153, 0, -93, -5],
        [716, 155, 159, 154, 0, -98, -4],
        [877, 155, 150, 154, 0, -103, -3],
        [1029, 155, 142, 155, 0, -107, -2],
        [1173, 155, 132, 154, 0, -112, -1],
        [1307, 155, 121, 155, 0, -117, 0],
        [1430, 155, 112, 155, 0, -121, 0],
        [1544, 155, 100, 154, 0, -126, 0],
        [1646, 155, 89, 154, 0, -131, 0],
        [1737, 155, 76, 154, 0, -137, 0],
        [1815, 155, 64, 154, 0, -142, 0],
        [1, 312, 51, 153, 0, -147, 0],
        [54, 312, 38, 153, 0, -152, 0],
        [94, 312, 26, 161, 0, -156, 0],
        [122, 312, 33, 153, 0, -148, 0],
        [157, 312, 47, 154, 0, -140, 0],
        [206, 312, 60, 154, 0, -132, 0],
        [268, 312, 73, 154, 0, -124, 0],
        [343, 312, 85, 155, 0, -117, 0],
        [430, 312, 98, 155, 0, -109, 0],
        [530, 312, 109, 155, 0, -102, 0],
        [641, 312, 120, 157, 0, -96, 0],
        [763, 312, 132, 157, 0, -89, 0],
        [897, 312, 142, 158, 0, -83, 0],
        [1041, 312, 151, 158, 0, -78, -1],
        [1194, 312, 160, 158, 0, -73, -1],
        [1356, 312, 168, 158, 0, -69, -2],
        [1526, 312, 176, 158, 0, -65, -3],
        [1704, 312, 184, 157, 0, -61, -4],
        [1, 475, 190, 157, 0, -59, -5],
        [193, 475, 196, 157, 0, -56, -6],
        [391, 475, 200, 157, 0, -55, -7],
        [593, 475, 205, 155, 0, -53, -9],
        [800, 475, 209, 155, 0, -51, -10],
        [1011, 475, 213, 155, 0, -50, -11],
        [1226, 475, 215, 155, 0, -50, -12],
        [1443, 475, 216, 155, 0, -50, -13],
        [1661, 475, 216, 156, 0, -51, -13],
        [1, 634, 216, 154, 0, -52, -15],
        [219, 634, 216, 155, 0, -53, -15],
        [437, 634, 216, 155, 0, -54, -16],
        [655, 634, 214, 155, 0, -56, -17],
        [871, 634, 211, 155, 0, -58, -18],
        [1084, 634, 208, 155, 0, -60, -19],
        [1294, 634, 203, 155, 0, -63, -20],
        [1499, 634, 199, 155, 0, -66, -21],
        [1700, 634, 194, 155, 0, -69, -22],
        [1, 791, 187, 156, 0, -73, -22],
        [190, 791, 181, 156, 0, -76, -23],
        [373, 791, 174, 156, 0, -80, -24],
        [549, 791, 166, 155, 0, -84, -25],
        [717, 791, 157, 155, 0, -88, -25],
        [876, 791, 148, 154, 0, -92, -26],
        [1026, 791, 137, 153, 0, -97, -27],
        [1165, 791, 127, 153, 0, -101, -27],
        [1294, 791, 117, 152, 0, -105, -28],
        [1413, 791, 105, 151, 0, -110, -29],
        [1520, 791, 93, 151, 0, -115, -29],
        [1615, 791, 81, 151, 0, -120, -29],
        [1698, 791, 68, 151, 0, -125, -29],
        [1768, 791, 55, 150, 0, -130, -30],
        [1825, 791, 42, 150, 0, -135, -30],
        [1, 949, 29, 150, 0, -140, -30],
        [32, 949, 30, 150, 0, -135, -30],
        [64, 949, 43, 150, 0, -127, -30],
        [109, 949, 56, 150, 0, -119, -30],
        [167, 949, 68, 150, 0, -112, -30],
        [237, 949, 80, 150, 0, -105, -30],
        [319, 949, 92, 151, 0, -98, -29],
        [413, 949, 103, 151, 0, -92, -29],
        [518, 949, 114, 151, 0, -86, -29],
        [634, 949, 125, 151, 0, -80, -29],
        [761, 949, 135, 152, 0, -75, -28],
        [898, 949, 145, 152, 0, -70, -28],
        [1045, 949, 153, 152, 0, -66, -27],
        [1200, 949, 161, 153, 0, -62, -26],
        [1363, 949, 169, 151, 0, -59, -26],
        [1534, 949, 175, 152, 0, -57, -25],
        [1711, 949, 181, 152, 0, -55, -24],
        [1, 1104, 187, 151, 0, -53, -24],
        [190, 1104, 192, 151, 0, -52, -23],
        [384, 1104, 196, 151, 0, -51, -22],
        [582, 1104, 200, 149, 0, -51, -22],
        [784, 1104, 204, 149, 0, -50, -21],
        [990, 1104, 206, 149, 0, -51, -20],
        [1198, 1104, 208, 149, 0, -51, -19],
        [1408, 1104, 210, 151, 0, -52, -18],
        [1620, 1104, 209, 150, 0, -55, -17]
    ]
}

export default class GameCanvas extends Component {
    constructor(props) {
        super(props);
        
        this.ui = {
            canvasWrapper: React.createRef()
        }

        this._tweenObj = {
            frame: 0
        };
    }

    componentDidMount() {
        this._setupSpritesheet();
        this.ui.canvasWrapper.current.innerHTML = '';
        this.ui.canvasWrapper.current.appendChild(this._spritesheet.getCanvas());
    }

    componentDidUpdate() {
        this.ui.canvasWrapper.current.innerHTML = '';
        this.ui.canvasWrapper.current.appendChild(this._spritesheet.getCanvas());
    }

    componentWillUnmount() {
        this._removeSpritesheet();
    }

    render() {
        return (
            <div className="logo-canvas" ref={this.ui.canvasWrapper}></div>
        )
    }

    _setupSpritesheet() {
        data.images = [getAsset('logo')];

        const width = 320;
        const height = 180;

        this._spritesheet = new SpritesheetUtils({
            images: data.images,
            frames: data.frames
        });
        this._canvas = this._spritesheet.getCanvas();
        this._spritesheet.setSize(width, height);
        
        this._tween = gsap.fromTo(this._tweenObj, { frame: 0 }, { duration: (data.frames.length-1)/24, frame: data.frames.length-1, ease: 'none', repeat: -1, onUpdate: () => {
            const frame = Math.round(this._tweenObj.frame);
            this._spritesheet.frame(frame);
        }});
        this._tweenUpDown = gsap.to(this.ui.canvasWrapper.current, { duration: 5, y: 15, repeat: -1, yoyo: true, ease: 'power1.inOut'});
    }

    _removeSpritesheet() {
        if (this._tween) {
            this._tween.kill();
        }
        
        if (this._tweenUpDown) {
            this._tweenUpDown.kill();
        }

        if (this._spritesheet) {
            this._spritesheet.destroy();
        }
    } 

}